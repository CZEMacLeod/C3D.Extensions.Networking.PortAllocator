# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Build and Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: Build and Test
    
    # Permissions this GitHub Action needs for other things in GitHub
    permissions: write-all

    runs-on: ubuntu-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    strategy:
      matrix:
        dotnet-version: [ '8.0.x', '9.0.x' ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-quality: 'ga'
        dotnet-version: ${{ matrix.dotnet-version }}

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore --configuration Release /p:ContinuousIntegrationBuild=true

    # Build the application
    - name: Build the application
      run: dotnet build --no-restore --configuration Release /p:ContinuousIntegrationBuild=true

    - name: Run tests
      run: dotnet test --no-restore --no-build --logger "console;verbosity=detailed" --logger "trx;verbosity=normal" --collect:"XPlat Code Coverage" --results-directory "TestResults-${{ matrix.dotnet-version }}"
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload dotnet test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}