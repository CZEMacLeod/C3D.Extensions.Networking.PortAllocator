# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Build and Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: Build and Test
    
    # Permissions this GitHub Action needs for other things in GitHub
    permissions: write-all

    runs-on: ubuntu-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-quality: 'ga'
        dotnet-version: |
            8.0.x
            9.0.x

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore /p:Configuration=Release /p:ContinuousIntegrationBuild=true

    # Build the application
    - name: Build the application
      run: dotnet build --no-restore --configuration Release /p:ContinuousIntegrationBuild=true

    - name: Run tests 8.0
      run: dotnet test --no-restore --no-build --configuration Release --logger "console;verbosity=detailed" --logger "trx;verbosity=normal" --collect:"XPlat Code Coverage" --results-directory "TestResults-net8.0" -f net8.0

    - name: Run tests 9.0
      run: dotnet test --no-restore --no-build --configuration Release --logger "console;verbosity=detailed" --logger "trx;verbosity=normal" --collect:"XPlat Code Coverage" --results-directory "TestResults-net9.0" -f net8.0

    - name: Upload dotnet 8.0 test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-net8.0
        path: TestResults-net8.0
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: Upload dotnet 9.0 test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-net9.0
        path: TestResults-net9.0
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: Combine Coverage Reports # This is because one report is produced per project, and we want one result for all of them.
      uses: danielpalme/ReportGenerator-GitHub-Action@v5.4.7
      with:
        reports: "**/*.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: "${{ github.workspace }}" # REQUIRED # The directory where the generated report should be saved.
        reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
        verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        title: "Code Coverage" # Optional title.
        tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
        customSettings: "" # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
        toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.

    - name: Upload Combined Coverage XML
      uses: actions/upload-artifact@v4
      with:
          name: coverage
          path: ${{ github.workspace }}/Cobertura.xml
          retention-days: 5

    - name: Publish Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
          filename: "Cobertura.xml"
          badge: true
          fail_below_min: false # just informative for now
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "10 30"

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
          recreate: true
          path: code-coverage-results.md

    - name: Upload Test Result Files
      uses: actions/upload-artifact@v4
      with:
          name: test-results
          path: ${{ github.workspace }}/**/TestResults/**/*
          retention-days: 5

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2.20.0
      if: always()
      with:
          # NOTE: using trx_files instead of files due to https://github.com/EnricoMi/publish-unit-test-result-action/issues/424
          trx_files: "${{ github.workspace }}/**/*.trx"