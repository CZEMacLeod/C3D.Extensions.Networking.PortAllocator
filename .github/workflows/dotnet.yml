# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Build and Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: Build and Test

    strategy:
      matrix:
        configuration: [Release]
    
        # Permissions this GitHub Action needs for other things in GitHub
    permissions: write-all

    runs-on: ubuntu-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: C3D.Extensions.Networking.PortAllocator.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-quality: 'ga'
        dotnet-version: |
            8.0.x
            9.0.x

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore $env:Solution_Name /p:Configuration=$env:Configuration /p:ContinuousIntegrationBuild=true
      env:
        Configuration: ${{ matrix.configuration }}

    # Build the application
    - name: Build the application
      run: dotnet build $env:Solution_Name /p:Configuration=$env:Configuration /p:ContinuousIntegrationBuild=true
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Run tests
      run: dotnet test --no-restore --no-build --logger "console;verbosity=detailed" --logger "trx;verbosity=normal" --collect:"XPlat Code Coverage" --results-directory "TestResults"
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload dotnet test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results
        path: TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}